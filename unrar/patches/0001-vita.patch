diff --git a/Makefile.vita b/Makefile.vita
new file mode 100644
index 0000000..9f9eb98
--- /dev/null
+++ b/Makefile.vita
@@ -0,0 +1,26 @@
+TARGET    = libunrar.a
+OBJS      = archive.o arcread.o blake2s.o cmddata.o consio.o crc.o crypt.o \
+			dll.o encname.o errhnd.o extinfo.o extract.o filcreat.o file.o \
+			filefn.o filestr.o find.o getbits.o global.o hash.o headers.o \
+			match.o options.o pathfn.o qopen.o rar.o rarpch.o rarvm.o \
+			rawread.o rdwrfn.o rijndael.o rs.o rs16.o scantree.o secpassword.o \
+			sha1.o sha256.o smallfn.o strfn.o strlist.o system.o threadpool.o \
+			timefn.o ui.o unicode.o unpack.o volume.o
+
+PREFIX   = arm-vita-eabi
+CC       = $(PREFIX)-gcc
+CXX      = $(PREFIX)-g++
+AR       = $(PREFIX)-ar
+CFLAGS   = -Wl,-q -Wall -O3 -Wno-unused-variable -Wno-unused-but-set-variable -ffat-lto-objects -flto -DRARDLL -DUNRAR -DSILENT
+CXXFLAGS = $(CFLAGS) -std=gnu++11 -fno-rtti
+
+.PHONY: all clean
+
+all: $(TARGET)
+
+$(TARGET): $(OBJS)
+	$(AR) rcu $@ $^
+
+clean:
+	@rm -rf $(TARGET) $(OBJS)
+	@echo "Cleaned up!"
diff --git a/file.cpp b/file.cpp
index e7b584d..6d4cf9b 100644
--- a/file.cpp
+++ b/file.cpp
@@ -700,6 +700,7 @@ void File::SetCloseFileTime(RarTime *ftm,RarTime *fta)
 
 void File::SetCloseFileTimeByName(const wchar *Name,RarTime *ftm,RarTime *fta)
 {
+#ifndef __vita__
 #ifdef _UNIX
   bool setm=ftm!=NULL && ftm->IsSet();
   bool seta=fta!=NULL && fta->IsSet();
@@ -729,6 +730,7 @@ void File::SetCloseFileTimeByName(const wchar *Name,RarTime *ftm,RarTime *fta)
 #endif
   }
 #endif
+#endif
 }
 
 
diff --git a/filefn.cpp b/filefn.cpp
index 883c26e..5e53f5d 100644
--- a/filefn.cpp
+++ b/filefn.cpp
@@ -154,6 +154,7 @@ int64 GetFreeDisk(const wchar *Name)
       uiUserFree.u.HighPart<=uiTotalFree.u.HighPart)
     return INT32TO64(uiUserFree.u.HighPart,uiUserFree.u.LowPart);
   return 0;
+#elif defined(__vita__)
 #elif defined(_UNIX)
   wchar Root[NM];
   GetFilePath(Name,Root,ASIZE(Root));
diff --git a/os.hpp b/os.hpp
index 7df3c6c..9a5a9f5 100644
--- a/os.hpp
+++ b/os.hpp
@@ -147,7 +147,7 @@
 #if defined(RAR_SMP) && defined(__APPLE__)
   #include <sys/sysctl.h>
 #endif
-#ifndef SFX_MODULE
+#if !defined(SFX_MODULE) && !defined(__vita__)
     #include <sys/statvfs.h>
 #endif
 #include <pwd.h>
@@ -215,7 +215,7 @@
 #endif
 
 // Unlike Apple x64, utimensat shall be available in all Apple M1 systems.
-#if _POSIX_C_SOURCE >= 200809L || defined(__APPLE__) && defined(__arm64__)
+#if (_POSIX_C_SOURCE >= 200809L || defined(__APPLE__) && defined(__arm64__)) && !defined(__vita__)
   #define UNIX_TIME_NS // Nanosecond time precision in Unix.
 #endif
 
diff --git a/ulinks.cpp b/ulinks.cpp
index d198f2e..9db4fbb 100644
--- a/ulinks.cpp
+++ b/ulinks.cpp
@@ -22,7 +22,8 @@ static bool UnixSymlink(CommandData *Cmd,const char *Target,const wchar *LinkNam
     }
     return false;
   }
-#ifdef USE_LUTIMES
+#ifndef __vita__
+#if USE_LUTIMES
 #ifdef UNIX_TIME_NS
   timespec times[2];
   times[0].tv_sec=fta->GetUnix();
@@ -38,6 +39,7 @@ static bool UnixSymlink(CommandData *Cmd,const char *Target,const wchar *LinkNam
   tv[1].tv_usec=long(ftm->GetUnixNS()%1000000000/1000);
   lutimes(LinkNameA,tv);
 #endif
+#endif
 #endif
 
   return true;
